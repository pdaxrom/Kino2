#############################################################################
# Makefile for building dist/opt/QtPalmtop/bin/kino2
# Generated by tmake at 13:56, 2003/09/11
#     Project: kino2
#    Template: app
#############################################################################

####### Compiler, tools and options

CC	=	arm-linux-gcc
CXX	=	arm-linux-g++
CFLAGS	=	-pipe -Wall -W -O2 -DNO_DEBUG
CXXFLAGS=	-pipe -DQWS -fno-exceptions -fno-rtti -Wall -W -O2 -DNO_DEBUG
INCPATH	=	-I$(QTDIR)/include
LINK	=	arm-linux-gcc
LFLAGS	=	
LIBS	=	$(SUBLIBS) -L$(QTDIR)/lib -lm -lqpe -lqte -ljpeg -lsl -lzdtm -lutil -s
MOC	=	$(QTDIR)/bin/moc
UIC	=	$(QTDIR)/bin/uic

TAR	=	tar -cf
GZIP	=	gzip -9f

####### Files

HEADERS =	player.h \
		control.h \
		ptyprocess.h \
		misc.h \
		kinosettings.h
SOURCES =	main.cpp \
		player.cpp \
		control.cpp \
		ptyprocess.cpp \
		misc.cpp \
		kinosettings.cpp
OBJECTS =	main.o \
		player.o \
		control.o \
		ptyprocess.o \
		misc.o \
		kinosettings.o \
		playerbase.o \
		kinosettingsbase.o \
		mediainfobase.o
INTERFACES =	playerbase.ui \
		kinosettingsbase.ui \
		mediainfobase.ui
UICDECLS =	playerbase.h \
		kinosettingsbase.h \
		mediainfobase.h
UICIMPLS =	playerbase.cpp \
		kinosettingsbase.cpp \
		mediainfobase.cpp
SRCMOC	=	moc_player.cpp \
		moc_control.cpp \
		moc_ptyprocess.cpp \
		moc_misc.cpp \
		moc_kinosettings.cpp \
		moc_playerbase.cpp \
		moc_kinosettingsbase.cpp \
		moc_mediainfobase.cpp
OBJMOC	=	moc_player.o \
		moc_control.o \
		moc_ptyprocess.o \
		moc_misc.o \
		moc_kinosettings.o \
		moc_playerbase.o \
		moc_kinosettingsbase.o \
		moc_mediainfobase.o
DIST	=	
TARGET	=	dist/opt/QtPalmtop/bin/kino2
INTERFACE_DECL_PATH = .

####### Implicit rules

.SUFFIXES: .cpp .cxx .cc .C .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules


all: $(TARGET)

$(TARGET): $(UICDECLS) $(OBJECTS) $(OBJMOC) 
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(LIBS)

moc: $(SRCMOC)

tmake: Makefile

Makefile: kino2.pro
	tmake kino2.pro -o Makefile

dist:
	$(TAR) kino2.tar kino2.pro $(SOURCES) $(HEADERS) $(INTERFACES) $(DIST)
	$(GZIP) kino2.tar

clean:
	-rm -f $(OBJECTS) $(OBJMOC) $(SRCMOC) $(UICIMPLS) $(UICDECLS) $(TARGET)
	-rm -f *~ core

####### Sub-libraries


###### Combined headers


####### Compile

main.o: main.cpp \
		player.h \
		playerbase.h \
		ptyprocess.h \
		control.h \
		sldirectpainter.h \
		kinosettings.h \
		kinosettingsbase.h

player.o: player.cpp \
		player.h \
		playerbase.h \
		ptyprocess.h \
		control.h \
		sldirectpainter.h \
		kinosettings.h \
		kinosettingsbase.h \
		misc.h

control.o: control.cpp \
		sldirectpainter.h \
		control.h

ptyprocess.o: ptyprocess.cpp \
		ptyprocess.h

misc.o: misc.cpp \
		misc.h

kinosettings.o: kinosettings.cpp \
		kinosettings.h \
		kinosettingsbase.h

playerbase.h: playerbase.ui
	$(UIC) playerbase.ui -o $(INTERFACE_DECL_PATH)/playerbase.h

playerbase.cpp: playerbase.ui
	$(UIC) playerbase.ui -i playerbase.h -o playerbase.cpp

kinosettingsbase.h: kinosettingsbase.ui
	$(UIC) kinosettingsbase.ui -o $(INTERFACE_DECL_PATH)/kinosettingsbase.h

kinosettingsbase.cpp: kinosettingsbase.ui
	$(UIC) kinosettingsbase.ui -i kinosettingsbase.h -o kinosettingsbase.cpp

mediainfobase.h: mediainfobase.ui
	$(UIC) mediainfobase.ui -o $(INTERFACE_DECL_PATH)/mediainfobase.h

mediainfobase.cpp: mediainfobase.ui
	$(UIC) mediainfobase.ui -i mediainfobase.h -o mediainfobase.cpp

playerbase.o: playerbase.cpp

kinosettingsbase.o: kinosettingsbase.cpp

mediainfobase.o: mediainfobase.cpp

moc_player.o: moc_player.cpp \
		player.h \
		playerbase.h \
		ptyprocess.h \
		control.h \
		sldirectpainter.h \
		kinosettings.h \
		kinosettingsbase.h

moc_control.o: moc_control.cpp \
		control.h \
		sldirectpainter.h

moc_ptyprocess.o: moc_ptyprocess.cpp \
		ptyprocess.h

moc_misc.o: moc_misc.cpp \
		misc.h

moc_kinosettings.o: moc_kinosettings.cpp \
		kinosettings.h \
		kinosettingsbase.h

moc_playerbase.o: moc_playerbase.cpp \
		playerbase.h

moc_kinosettingsbase.o: moc_kinosettingsbase.cpp \
		kinosettingsbase.h

moc_mediainfobase.o: moc_mediainfobase.cpp \
		mediainfobase.h

moc_player.cpp: player.h
	$(MOC) player.h -o moc_player.cpp

moc_control.cpp: control.h
	$(MOC) control.h -o moc_control.cpp

moc_ptyprocess.cpp: ptyprocess.h
	$(MOC) ptyprocess.h -o moc_ptyprocess.cpp

moc_misc.cpp: misc.h
	$(MOC) misc.h -o moc_misc.cpp

moc_kinosettings.cpp: kinosettings.h
	$(MOC) kinosettings.h -o moc_kinosettings.cpp

moc_playerbase.cpp: playerbase.h
	$(MOC) playerbase.h -o moc_playerbase.cpp

moc_kinosettingsbase.cpp: kinosettingsbase.h
	$(MOC) kinosettingsbase.h -o moc_kinosettingsbase.cpp

moc_mediainfobase.cpp: mediainfobase.h
	$(MOC) mediainfobase.h -o moc_mediainfobase.cpp

